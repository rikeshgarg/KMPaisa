// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.grantland.widget.AutofitTextView;

public final class ItemDashboardAnimBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LottieAnimationView animationView;

  @NonNull
  public final RelativeLayout cardview;

  @NonNull
  public final ImageView imgTickcross;

  @NonNull
  public final AutofitTextView name;

  private ItemDashboardAnimBinding(@NonNull RelativeLayout rootView,
      @NonNull LottieAnimationView animationView, @NonNull RelativeLayout cardview,
      @NonNull ImageView imgTickcross, @NonNull AutofitTextView name) {
    this.rootView = rootView;
    this.animationView = animationView;
    this.cardview = cardview;
    this.imgTickcross = imgTickcross;
    this.name = name;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDashboardAnimBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDashboardAnimBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_dashboard_anim, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDashboardAnimBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animationView;
      LottieAnimationView animationView = ViewBindings.findChildViewById(rootView, id);
      if (animationView == null) {
        break missingId;
      }

      RelativeLayout cardview = (RelativeLayout) rootView;

      id = R.id.img_tickcross;
      ImageView imgTickcross = ViewBindings.findChildViewById(rootView, id);
      if (imgTickcross == null) {
        break missingId;
      }

      id = R.id.name;
      AutofitTextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      return new ItemDashboardAnimBinding((RelativeLayout) rootView, animationView, cardview,
          imgTickcross, name);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
