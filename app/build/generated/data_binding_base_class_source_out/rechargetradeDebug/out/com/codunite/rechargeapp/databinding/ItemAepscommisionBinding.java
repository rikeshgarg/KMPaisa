// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAepscommisionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView commisionAepsCommision;

  @NonNull
  public final TextView endrangeAepsCommision;

  @NonNull
  public final TextView flatAepsCommision;

  @NonNull
  public final LinearLayout layHeadChange;

  @NonNull
  public final LinearLayout llSurcharge;

  @NonNull
  public final LinearLayout lytParent;

  @NonNull
  public final TextView startrangeAepsCommision;

  @NonNull
  public final TextView surchargeReCommision;

  @NonNull
  public final TextView typeAepsCommision;

  private ItemAepscommisionBinding(@NonNull LinearLayout rootView,
      @NonNull TextView commisionAepsCommision, @NonNull TextView endrangeAepsCommision,
      @NonNull TextView flatAepsCommision, @NonNull LinearLayout layHeadChange,
      @NonNull LinearLayout llSurcharge, @NonNull LinearLayout lytParent,
      @NonNull TextView startrangeAepsCommision, @NonNull TextView surchargeReCommision,
      @NonNull TextView typeAepsCommision) {
    this.rootView = rootView;
    this.commisionAepsCommision = commisionAepsCommision;
    this.endrangeAepsCommision = endrangeAepsCommision;
    this.flatAepsCommision = flatAepsCommision;
    this.layHeadChange = layHeadChange;
    this.llSurcharge = llSurcharge;
    this.lytParent = lytParent;
    this.startrangeAepsCommision = startrangeAepsCommision;
    this.surchargeReCommision = surchargeReCommision;
    this.typeAepsCommision = typeAepsCommision;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAepscommisionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAepscommisionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_aepscommision, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAepscommisionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.commision_aeps_commision;
      TextView commisionAepsCommision = ViewBindings.findChildViewById(rootView, id);
      if (commisionAepsCommision == null) {
        break missingId;
      }

      id = R.id.endrange_aeps_commision;
      TextView endrangeAepsCommision = ViewBindings.findChildViewById(rootView, id);
      if (endrangeAepsCommision == null) {
        break missingId;
      }

      id = R.id.flat_aeps_commision;
      TextView flatAepsCommision = ViewBindings.findChildViewById(rootView, id);
      if (flatAepsCommision == null) {
        break missingId;
      }

      id = R.id.lay_head_change;
      LinearLayout layHeadChange = ViewBindings.findChildViewById(rootView, id);
      if (layHeadChange == null) {
        break missingId;
      }

      id = R.id.ll_surcharge;
      LinearLayout llSurcharge = ViewBindings.findChildViewById(rootView, id);
      if (llSurcharge == null) {
        break missingId;
      }

      LinearLayout lytParent = (LinearLayout) rootView;

      id = R.id.startrange_aeps_commision;
      TextView startrangeAepsCommision = ViewBindings.findChildViewById(rootView, id);
      if (startrangeAepsCommision == null) {
        break missingId;
      }

      id = R.id.surcharge_re_commision;
      TextView surchargeReCommision = ViewBindings.findChildViewById(rootView, id);
      if (surchargeReCommision == null) {
        break missingId;
      }

      id = R.id.type_aeps_commision;
      TextView typeAepsCommision = ViewBindings.findChildViewById(rootView, id);
      if (typeAepsCommision == null) {
        break missingId;
      }

      return new ItemAepscommisionBinding((LinearLayout) rootView, commisionAepsCommision,
          endrangeAepsCommision, flatAepsCommision, layHeadChange, llSurcharge, lytParent,
          startrangeAepsCommision, surchargeReCommision, typeAepsCommision);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
