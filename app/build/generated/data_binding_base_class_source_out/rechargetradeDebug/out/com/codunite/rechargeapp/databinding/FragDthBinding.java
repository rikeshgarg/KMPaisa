// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragDthBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnDthrecharge;

  @NonNull
  public final AppCompatButton btnOtpauth;

  @NonNull
  public final AppCompatButton btnOtpcancel;

  @NonNull
  public final LinearLayout cardDth;

  @NonNull
  public final LinearLayout cardOtp;

  @NonNull
  public final EditText dthAmount;

  @NonNull
  public final EditText dthCardnumber;

  @NonNull
  public final EditText edtOtp;

  @NonNull
  public final ImageView imgDrop1;

  @NonNull
  public final ImageView imgDrop2;

  @NonNull
  public final RelativeLayout layCircle;

  @NonNull
  public final RelativeLayout layOperator;

  @NonNull
  public final LinearLayout mylayout;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final ProgressBar progressbarLoadOne;

  @NonNull
  public final ProgressBar progressbarLoadTwo;

  @NonNull
  public final Spinner spinnerDthcirclelist;

  @NonNull
  public final Spinner spinnerDthoperatorlist;

  @NonNull
  public final TextView spinnerDthoperatorlistTxt;

  @NonNull
  public final TextView txtAvailbalance;

  @NonNull
  public final TextView txtCurrency;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtRoffers;

  @NonNull
  public final TextView txtViewallplans;

  private FragDthBinding(@NonNull LinearLayout rootView, @NonNull AppCompatButton btnDthrecharge,
      @NonNull AppCompatButton btnOtpauth, @NonNull AppCompatButton btnOtpcancel,
      @NonNull LinearLayout cardDth, @NonNull LinearLayout cardOtp, @NonNull EditText dthAmount,
      @NonNull EditText dthCardnumber, @NonNull EditText edtOtp, @NonNull ImageView imgDrop1,
      @NonNull ImageView imgDrop2, @NonNull RelativeLayout layCircle,
      @NonNull RelativeLayout layOperator, @NonNull LinearLayout mylayout,
      @NonNull NestedScrollView nestedScrollView, @NonNull ProgressBar progressbarLoadOne,
      @NonNull ProgressBar progressbarLoadTwo, @NonNull Spinner spinnerDthcirclelist,
      @NonNull Spinner spinnerDthoperatorlist, @NonNull TextView spinnerDthoperatorlistTxt,
      @NonNull TextView txtAvailbalance, @NonNull TextView txtCurrency, @NonNull TextView txtName,
      @NonNull TextView txtRoffers, @NonNull TextView txtViewallplans) {
    this.rootView = rootView;
    this.btnDthrecharge = btnDthrecharge;
    this.btnOtpauth = btnOtpauth;
    this.btnOtpcancel = btnOtpcancel;
    this.cardDth = cardDth;
    this.cardOtp = cardOtp;
    this.dthAmount = dthAmount;
    this.dthCardnumber = dthCardnumber;
    this.edtOtp = edtOtp;
    this.imgDrop1 = imgDrop1;
    this.imgDrop2 = imgDrop2;
    this.layCircle = layCircle;
    this.layOperator = layOperator;
    this.mylayout = mylayout;
    this.nestedScrollView = nestedScrollView;
    this.progressbarLoadOne = progressbarLoadOne;
    this.progressbarLoadTwo = progressbarLoadTwo;
    this.spinnerDthcirclelist = spinnerDthcirclelist;
    this.spinnerDthoperatorlist = spinnerDthoperatorlist;
    this.spinnerDthoperatorlistTxt = spinnerDthoperatorlistTxt;
    this.txtAvailbalance = txtAvailbalance;
    this.txtCurrency = txtCurrency;
    this.txtName = txtName;
    this.txtRoffers = txtRoffers;
    this.txtViewallplans = txtViewallplans;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragDthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragDthBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.frag_dth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragDthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_dthrecharge;
      AppCompatButton btnDthrecharge = ViewBindings.findChildViewById(rootView, id);
      if (btnDthrecharge == null) {
        break missingId;
      }

      id = R.id.btn_otpauth;
      AppCompatButton btnOtpauth = ViewBindings.findChildViewById(rootView, id);
      if (btnOtpauth == null) {
        break missingId;
      }

      id = R.id.btn_otpcancel;
      AppCompatButton btnOtpcancel = ViewBindings.findChildViewById(rootView, id);
      if (btnOtpcancel == null) {
        break missingId;
      }

      id = R.id.card_dth;
      LinearLayout cardDth = ViewBindings.findChildViewById(rootView, id);
      if (cardDth == null) {
        break missingId;
      }

      id = R.id.card_otp;
      LinearLayout cardOtp = ViewBindings.findChildViewById(rootView, id);
      if (cardOtp == null) {
        break missingId;
      }

      id = R.id.dth_amount;
      EditText dthAmount = ViewBindings.findChildViewById(rootView, id);
      if (dthAmount == null) {
        break missingId;
      }

      id = R.id.dth_cardnumber;
      EditText dthCardnumber = ViewBindings.findChildViewById(rootView, id);
      if (dthCardnumber == null) {
        break missingId;
      }

      id = R.id.edt_otp;
      EditText edtOtp = ViewBindings.findChildViewById(rootView, id);
      if (edtOtp == null) {
        break missingId;
      }

      id = R.id.img_drop_1;
      ImageView imgDrop1 = ViewBindings.findChildViewById(rootView, id);
      if (imgDrop1 == null) {
        break missingId;
      }

      id = R.id.img_drop_2;
      ImageView imgDrop2 = ViewBindings.findChildViewById(rootView, id);
      if (imgDrop2 == null) {
        break missingId;
      }

      id = R.id.lay_circle;
      RelativeLayout layCircle = ViewBindings.findChildViewById(rootView, id);
      if (layCircle == null) {
        break missingId;
      }

      id = R.id.lay_operator;
      RelativeLayout layOperator = ViewBindings.findChildViewById(rootView, id);
      if (layOperator == null) {
        break missingId;
      }

      LinearLayout mylayout = (LinearLayout) rootView;

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.progressbar_load_one;
      ProgressBar progressbarLoadOne = ViewBindings.findChildViewById(rootView, id);
      if (progressbarLoadOne == null) {
        break missingId;
      }

      id = R.id.progressbar_load_two;
      ProgressBar progressbarLoadTwo = ViewBindings.findChildViewById(rootView, id);
      if (progressbarLoadTwo == null) {
        break missingId;
      }

      id = R.id.spinner_dthcirclelist;
      Spinner spinnerDthcirclelist = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDthcirclelist == null) {
        break missingId;
      }

      id = R.id.spinner_dthoperatorlist;
      Spinner spinnerDthoperatorlist = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDthoperatorlist == null) {
        break missingId;
      }

      id = R.id.spinner_dthoperatorlist_txt;
      TextView spinnerDthoperatorlistTxt = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDthoperatorlistTxt == null) {
        break missingId;
      }

      id = R.id.txt_availbalance;
      TextView txtAvailbalance = ViewBindings.findChildViewById(rootView, id);
      if (txtAvailbalance == null) {
        break missingId;
      }

      id = R.id.txt_currency;
      TextView txtCurrency = ViewBindings.findChildViewById(rootView, id);
      if (txtCurrency == null) {
        break missingId;
      }

      id = R.id.txt_name;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txt_roffers;
      TextView txtRoffers = ViewBindings.findChildViewById(rootView, id);
      if (txtRoffers == null) {
        break missingId;
      }

      id = R.id.txt_viewallplans;
      TextView txtViewallplans = ViewBindings.findChildViewById(rootView, id);
      if (txtViewallplans == null) {
        break missingId;
      }

      return new FragDthBinding((LinearLayout) rootView, btnDthrecharge, btnOtpauth, btnOtpcancel,
          cardDth, cardOtp, dthAmount, dthCardnumber, edtOtp, imgDrop1, imgDrop2, layCircle,
          layOperator, mylayout, nestedScrollView, progressbarLoadOne, progressbarLoadTwo,
          spinnerDthcirclelist, spinnerDthoperatorlist, spinnerDthoperatorlistTxt, txtAvailbalance,
          txtCurrency, txtName, txtRoffers, txtViewallplans);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
