// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActAddEditMemberBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnSubmit;

  @NonNull
  public final EditText etCity;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etMobile;

  @NonNull
  public final EditText etName;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final EditText etTransPassword;

  @NonNull
  public final ImageView imgCountry;

  @NonNull
  public final ImageView imgDrawable;

  @NonNull
  public final ImageView imgDrawable1;

  @NonNull
  public final ImageView imgMemberType;

  @NonNull
  public final ImageView imgState;

  @NonNull
  public final ImageView imgStatus;

  @NonNull
  public final ImageView ivCity;

  @NonNull
  public final ImageView ivEmail;

  @NonNull
  public final ImageView ivMobile;

  @NonNull
  public final ImageView ivName;

  @NonNull
  public final ImageView ivPassword;

  @NonNull
  public final ImageView ivTransPassword;

  @NonNull
  public final IncludeActionbarBinding layActionbar;

  @NonNull
  public final RelativeLayout layState;

  @NonNull
  public final LinearLayout mylayout;

  @NonNull
  public final LinearLayout nestedScrollView;

  @NonNull
  public final RelativeLayout rlCountry;

  @NonNull
  public final RelativeLayout rlMemberType;

  @NonNull
  public final RelativeLayout rlStatus;

  @NonNull
  public final NestedScrollView scrollView2;

  @NonNull
  public final Spinner spinnerCountry;

  @NonNull
  public final Spinner spinnerMemberType;

  @NonNull
  public final Spinner spinnerStatus;

  @NonNull
  public final TextView txtState;

  private ActAddEditMemberBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton btnSubmit, @NonNull EditText etCity, @NonNull EditText etEmail,
      @NonNull EditText etMobile, @NonNull EditText etName, @NonNull EditText etPassword,
      @NonNull EditText etTransPassword, @NonNull ImageView imgCountry,
      @NonNull ImageView imgDrawable, @NonNull ImageView imgDrawable1,
      @NonNull ImageView imgMemberType, @NonNull ImageView imgState, @NonNull ImageView imgStatus,
      @NonNull ImageView ivCity, @NonNull ImageView ivEmail, @NonNull ImageView ivMobile,
      @NonNull ImageView ivName, @NonNull ImageView ivPassword, @NonNull ImageView ivTransPassword,
      @NonNull IncludeActionbarBinding layActionbar, @NonNull RelativeLayout layState,
      @NonNull LinearLayout mylayout, @NonNull LinearLayout nestedScrollView,
      @NonNull RelativeLayout rlCountry, @NonNull RelativeLayout rlMemberType,
      @NonNull RelativeLayout rlStatus, @NonNull NestedScrollView scrollView2,
      @NonNull Spinner spinnerCountry, @NonNull Spinner spinnerMemberType,
      @NonNull Spinner spinnerStatus, @NonNull TextView txtState) {
    this.rootView = rootView;
    this.btnSubmit = btnSubmit;
    this.etCity = etCity;
    this.etEmail = etEmail;
    this.etMobile = etMobile;
    this.etName = etName;
    this.etPassword = etPassword;
    this.etTransPassword = etTransPassword;
    this.imgCountry = imgCountry;
    this.imgDrawable = imgDrawable;
    this.imgDrawable1 = imgDrawable1;
    this.imgMemberType = imgMemberType;
    this.imgState = imgState;
    this.imgStatus = imgStatus;
    this.ivCity = ivCity;
    this.ivEmail = ivEmail;
    this.ivMobile = ivMobile;
    this.ivName = ivName;
    this.ivPassword = ivPassword;
    this.ivTransPassword = ivTransPassword;
    this.layActionbar = layActionbar;
    this.layState = layState;
    this.mylayout = mylayout;
    this.nestedScrollView = nestedScrollView;
    this.rlCountry = rlCountry;
    this.rlMemberType = rlMemberType;
    this.rlStatus = rlStatus;
    this.scrollView2 = scrollView2;
    this.spinnerCountry = spinnerCountry;
    this.spinnerMemberType = spinnerMemberType;
    this.spinnerStatus = spinnerStatus;
    this.txtState = txtState;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActAddEditMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActAddEditMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_add_edit_member, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActAddEditMemberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_submit;
      AppCompatButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.et_city;
      EditText etCity = ViewBindings.findChildViewById(rootView, id);
      if (etCity == null) {
        break missingId;
      }

      id = R.id.et_email;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_mobile;
      EditText etMobile = ViewBindings.findChildViewById(rootView, id);
      if (etMobile == null) {
        break missingId;
      }

      id = R.id.et_name;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_password;
      EditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.et_trans_password;
      EditText etTransPassword = ViewBindings.findChildViewById(rootView, id);
      if (etTransPassword == null) {
        break missingId;
      }

      id = R.id.img_country;
      ImageView imgCountry = ViewBindings.findChildViewById(rootView, id);
      if (imgCountry == null) {
        break missingId;
      }

      id = R.id.img_drawable;
      ImageView imgDrawable = ViewBindings.findChildViewById(rootView, id);
      if (imgDrawable == null) {
        break missingId;
      }

      id = R.id.img_drawable1;
      ImageView imgDrawable1 = ViewBindings.findChildViewById(rootView, id);
      if (imgDrawable1 == null) {
        break missingId;
      }

      id = R.id.img_member_type;
      ImageView imgMemberType = ViewBindings.findChildViewById(rootView, id);
      if (imgMemberType == null) {
        break missingId;
      }

      id = R.id.img_state;
      ImageView imgState = ViewBindings.findChildViewById(rootView, id);
      if (imgState == null) {
        break missingId;
      }

      id = R.id.img_status;
      ImageView imgStatus = ViewBindings.findChildViewById(rootView, id);
      if (imgStatus == null) {
        break missingId;
      }

      id = R.id.iv_city;
      ImageView ivCity = ViewBindings.findChildViewById(rootView, id);
      if (ivCity == null) {
        break missingId;
      }

      id = R.id.iv_email;
      ImageView ivEmail = ViewBindings.findChildViewById(rootView, id);
      if (ivEmail == null) {
        break missingId;
      }

      id = R.id.iv_mobile;
      ImageView ivMobile = ViewBindings.findChildViewById(rootView, id);
      if (ivMobile == null) {
        break missingId;
      }

      id = R.id.iv_name;
      ImageView ivName = ViewBindings.findChildViewById(rootView, id);
      if (ivName == null) {
        break missingId;
      }

      id = R.id.iv_password;
      ImageView ivPassword = ViewBindings.findChildViewById(rootView, id);
      if (ivPassword == null) {
        break missingId;
      }

      id = R.id.iv_trans_password;
      ImageView ivTransPassword = ViewBindings.findChildViewById(rootView, id);
      if (ivTransPassword == null) {
        break missingId;
      }

      id = R.id.lay_actionbar;
      View layActionbar = ViewBindings.findChildViewById(rootView, id);
      if (layActionbar == null) {
        break missingId;
      }
      IncludeActionbarBinding binding_layActionbar = IncludeActionbarBinding.bind(layActionbar);

      id = R.id.lay_state;
      RelativeLayout layState = ViewBindings.findChildViewById(rootView, id);
      if (layState == null) {
        break missingId;
      }

      LinearLayout mylayout = (LinearLayout) rootView;

      id = R.id.nested_scroll_view;
      LinearLayout nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.rl_country;
      RelativeLayout rlCountry = ViewBindings.findChildViewById(rootView, id);
      if (rlCountry == null) {
        break missingId;
      }

      id = R.id.rl_member_type;
      RelativeLayout rlMemberType = ViewBindings.findChildViewById(rootView, id);
      if (rlMemberType == null) {
        break missingId;
      }

      id = R.id.rl_status;
      RelativeLayout rlStatus = ViewBindings.findChildViewById(rootView, id);
      if (rlStatus == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      NestedScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.spinner_country;
      Spinner spinnerCountry = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCountry == null) {
        break missingId;
      }

      id = R.id.spinner_member_type;
      Spinner spinnerMemberType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMemberType == null) {
        break missingId;
      }

      id = R.id.spinner_status;
      Spinner spinnerStatus = ViewBindings.findChildViewById(rootView, id);
      if (spinnerStatus == null) {
        break missingId;
      }

      id = R.id.txt_state;
      TextView txtState = ViewBindings.findChildViewById(rootView, id);
      if (txtState == null) {
        break missingId;
      }

      return new ActAddEditMemberBinding((LinearLayout) rootView, btnSubmit, etCity, etEmail,
          etMobile, etName, etPassword, etTransPassword, imgCountry, imgDrawable, imgDrawable1,
          imgMemberType, imgState, imgStatus, ivCity, ivEmail, ivMobile, ivName, ivPassword,
          ivTransPassword, binding_layActionbar, layState, mylayout, nestedScrollView, rlCountry,
          rlMemberType, rlStatus, scrollView2, spinnerCountry, spinnerMemberType, spinnerStatus,
          txtState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
