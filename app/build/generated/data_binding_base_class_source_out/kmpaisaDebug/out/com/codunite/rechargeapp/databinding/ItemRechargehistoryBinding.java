// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRechargehistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout accountno;

  @NonNull
  public final TextView afterBalance;

  @NonNull
  public final TextView beforeBalance;

  @NonNull
  public final AppCompatButton btnComplain;

  @NonNull
  public final CardView cardview;

  @NonNull
  public final LinearLayout layHeadChange;

  @NonNull
  public final LinearLayout layMob;

  @NonNull
  public final LinearLayout lytParent;

  @NonNull
  public final TextView memberDetail;

  @NonNull
  public final TextView mobile;

  @NonNull
  public final TextView operator;

  @NonNull
  public final TextView txtId;

  @NonNull
  public final TextView type;

  @NonNull
  public final TextView vmAccountno;

  @NonNull
  public final TextView vmMemberid;

  @NonNull
  public final TextView vmName;

  @NonNull
  public final TextView vmWallbal;

  private ItemRechargehistoryBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout accountno, @NonNull TextView afterBalance,
      @NonNull TextView beforeBalance, @NonNull AppCompatButton btnComplain,
      @NonNull CardView cardview, @NonNull LinearLayout layHeadChange, @NonNull LinearLayout layMob,
      @NonNull LinearLayout lytParent, @NonNull TextView memberDetail, @NonNull TextView mobile,
      @NonNull TextView operator, @NonNull TextView txtId, @NonNull TextView type,
      @NonNull TextView vmAccountno, @NonNull TextView vmMemberid, @NonNull TextView vmName,
      @NonNull TextView vmWallbal) {
    this.rootView = rootView;
    this.accountno = accountno;
    this.afterBalance = afterBalance;
    this.beforeBalance = beforeBalance;
    this.btnComplain = btnComplain;
    this.cardview = cardview;
    this.layHeadChange = layHeadChange;
    this.layMob = layMob;
    this.lytParent = lytParent;
    this.memberDetail = memberDetail;
    this.mobile = mobile;
    this.operator = operator;
    this.txtId = txtId;
    this.type = type;
    this.vmAccountno = vmAccountno;
    this.vmMemberid = vmMemberid;
    this.vmName = vmName;
    this.vmWallbal = vmWallbal;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRechargehistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRechargehistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_rechargehistory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRechargehistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountno;
      LinearLayout accountno = ViewBindings.findChildViewById(rootView, id);
      if (accountno == null) {
        break missingId;
      }

      id = R.id.after_balance;
      TextView afterBalance = ViewBindings.findChildViewById(rootView, id);
      if (afterBalance == null) {
        break missingId;
      }

      id = R.id.before_balance;
      TextView beforeBalance = ViewBindings.findChildViewById(rootView, id);
      if (beforeBalance == null) {
        break missingId;
      }

      id = R.id.btn_complain;
      AppCompatButton btnComplain = ViewBindings.findChildViewById(rootView, id);
      if (btnComplain == null) {
        break missingId;
      }

      id = R.id.cardview;
      CardView cardview = ViewBindings.findChildViewById(rootView, id);
      if (cardview == null) {
        break missingId;
      }

      id = R.id.lay_head_change;
      LinearLayout layHeadChange = ViewBindings.findChildViewById(rootView, id);
      if (layHeadChange == null) {
        break missingId;
      }

      id = R.id.lay_mob;
      LinearLayout layMob = ViewBindings.findChildViewById(rootView, id);
      if (layMob == null) {
        break missingId;
      }

      LinearLayout lytParent = (LinearLayout) rootView;

      id = R.id.member_detail;
      TextView memberDetail = ViewBindings.findChildViewById(rootView, id);
      if (memberDetail == null) {
        break missingId;
      }

      id = R.id.mobile;
      TextView mobile = ViewBindings.findChildViewById(rootView, id);
      if (mobile == null) {
        break missingId;
      }

      id = R.id.operator;
      TextView operator = ViewBindings.findChildViewById(rootView, id);
      if (operator == null) {
        break missingId;
      }

      id = R.id.txtId;
      TextView txtId = ViewBindings.findChildViewById(rootView, id);
      if (txtId == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      id = R.id.vm_accountno;
      TextView vmAccountno = ViewBindings.findChildViewById(rootView, id);
      if (vmAccountno == null) {
        break missingId;
      }

      id = R.id.vm_memberid;
      TextView vmMemberid = ViewBindings.findChildViewById(rootView, id);
      if (vmMemberid == null) {
        break missingId;
      }

      id = R.id.vm_name;
      TextView vmName = ViewBindings.findChildViewById(rootView, id);
      if (vmName == null) {
        break missingId;
      }

      id = R.id.vm_wallbal;
      TextView vmWallbal = ViewBindings.findChildViewById(rootView, id);
      if (vmWallbal == null) {
        break missingId;
      }

      return new ItemRechargehistoryBinding((LinearLayout) rootView, accountno, afterBalance,
          beforeBalance, btnComplain, cardview, layHeadChange, layMob, lytParent, memberDetail,
          mobile, operator, txtId, type, vmAccountno, vmMemberid, vmName, vmWallbal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
