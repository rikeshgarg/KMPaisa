// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBbpscommisionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardview;

  @NonNull
  public final TextView codeReCommision;

  @NonNull
  public final TextView commisionReCommision;

  @NonNull
  public final TextView flatReCommision;

  @NonNull
  public final LinearLayout layHeadChange;

  @NonNull
  public final LinearLayout lytParent;

  @NonNull
  public final TextView operatorReCommision;

  @NonNull
  public final TextView surchargeReCommision;

  @NonNull
  public final TextView typeReCommision;

  private ItemBbpscommisionBinding(@NonNull LinearLayout rootView, @NonNull CardView cardview,
      @NonNull TextView codeReCommision, @NonNull TextView commisionReCommision,
      @NonNull TextView flatReCommision, @NonNull LinearLayout layHeadChange,
      @NonNull LinearLayout lytParent, @NonNull TextView operatorReCommision,
      @NonNull TextView surchargeReCommision, @NonNull TextView typeReCommision) {
    this.rootView = rootView;
    this.cardview = cardview;
    this.codeReCommision = codeReCommision;
    this.commisionReCommision = commisionReCommision;
    this.flatReCommision = flatReCommision;
    this.layHeadChange = layHeadChange;
    this.lytParent = lytParent;
    this.operatorReCommision = operatorReCommision;
    this.surchargeReCommision = surchargeReCommision;
    this.typeReCommision = typeReCommision;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBbpscommisionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBbpscommisionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_bbpscommision, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBbpscommisionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardview;
      CardView cardview = ViewBindings.findChildViewById(rootView, id);
      if (cardview == null) {
        break missingId;
      }

      id = R.id.code_re_commision;
      TextView codeReCommision = ViewBindings.findChildViewById(rootView, id);
      if (codeReCommision == null) {
        break missingId;
      }

      id = R.id.commision_re_commision;
      TextView commisionReCommision = ViewBindings.findChildViewById(rootView, id);
      if (commisionReCommision == null) {
        break missingId;
      }

      id = R.id.flat_re_commision;
      TextView flatReCommision = ViewBindings.findChildViewById(rootView, id);
      if (flatReCommision == null) {
        break missingId;
      }

      id = R.id.lay_head_change;
      LinearLayout layHeadChange = ViewBindings.findChildViewById(rootView, id);
      if (layHeadChange == null) {
        break missingId;
      }

      LinearLayout lytParent = (LinearLayout) rootView;

      id = R.id.operator_re_commision;
      TextView operatorReCommision = ViewBindings.findChildViewById(rootView, id);
      if (operatorReCommision == null) {
        break missingId;
      }

      id = R.id.surcharge_re_commision;
      TextView surchargeReCommision = ViewBindings.findChildViewById(rootView, id);
      if (surchargeReCommision == null) {
        break missingId;
      }

      id = R.id.type_re_commision;
      TextView typeReCommision = ViewBindings.findChildViewById(rootView, id);
      if (typeReCommision == null) {
        break missingId;
      }

      return new ItemBbpscommisionBinding((LinearLayout) rootView, cardview, codeReCommision,
          commisionReCommision, flatReCommision, layHeadChange, lytParent, operatorReCommision,
          surchargeReCommision, typeReCommision);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
