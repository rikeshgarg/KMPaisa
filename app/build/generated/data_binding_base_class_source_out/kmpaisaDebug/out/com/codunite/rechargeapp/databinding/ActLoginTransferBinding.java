// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActLoginTransferBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLoginIn;

  @NonNull
  public final Button btnSignUp;

  @NonNull
  public final EditText edtMobile;

  @NonNull
  public final ConstraintLayout headlayout;

  @NonNull
  public final IncludeActionbarBinding layActionbar;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final NestedScrollView scrollView2;

  @NonNull
  public final Spinner spinnerMemberPosition;

  @NonNull
  public final TextView tvBeneficiarylist;

  @NonNull
  public final TextView tvRegister;

  @NonNull
  public final TextView txtLoginerror;

  private ActLoginTransferBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLoginIn,
      @NonNull Button btnSignUp, @NonNull EditText edtMobile, @NonNull ConstraintLayout headlayout,
      @NonNull IncludeActionbarBinding layActionbar, @NonNull LinearLayout linearLayout,
      @NonNull NestedScrollView scrollView2, @NonNull Spinner spinnerMemberPosition,
      @NonNull TextView tvBeneficiarylist, @NonNull TextView tvRegister,
      @NonNull TextView txtLoginerror) {
    this.rootView = rootView;
    this.btnLoginIn = btnLoginIn;
    this.btnSignUp = btnSignUp;
    this.edtMobile = edtMobile;
    this.headlayout = headlayout;
    this.layActionbar = layActionbar;
    this.linearLayout = linearLayout;
    this.scrollView2 = scrollView2;
    this.spinnerMemberPosition = spinnerMemberPosition;
    this.tvBeneficiarylist = tvBeneficiarylist;
    this.tvRegister = tvRegister;
    this.txtLoginerror = txtLoginerror;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActLoginTransferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActLoginTransferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_login_transfer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActLoginTransferBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_loginIn;
      Button btnLoginIn = ViewBindings.findChildViewById(rootView, id);
      if (btnLoginIn == null) {
        break missingId;
      }

      id = R.id.btnSignUp;
      Button btnSignUp = ViewBindings.findChildViewById(rootView, id);
      if (btnSignUp == null) {
        break missingId;
      }

      id = R.id.edt_mobile;
      EditText edtMobile = ViewBindings.findChildViewById(rootView, id);
      if (edtMobile == null) {
        break missingId;
      }

      ConstraintLayout headlayout = (ConstraintLayout) rootView;

      id = R.id.lay_actionbar;
      View layActionbar = ViewBindings.findChildViewById(rootView, id);
      if (layActionbar == null) {
        break missingId;
      }
      IncludeActionbarBinding binding_layActionbar = IncludeActionbarBinding.bind(layActionbar);

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      NestedScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.spinner_member_position;
      Spinner spinnerMemberPosition = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMemberPosition == null) {
        break missingId;
      }

      id = R.id.tv_beneficiarylist;
      TextView tvBeneficiarylist = ViewBindings.findChildViewById(rootView, id);
      if (tvBeneficiarylist == null) {
        break missingId;
      }

      id = R.id.tv_register;
      TextView tvRegister = ViewBindings.findChildViewById(rootView, id);
      if (tvRegister == null) {
        break missingId;
      }

      id = R.id.txt_loginerror;
      TextView txtLoginerror = ViewBindings.findChildViewById(rootView, id);
      if (txtLoginerror == null) {
        break missingId;
      }

      return new ActLoginTransferBinding((ConstraintLayout) rootView, btnLoginIn, btnSignUp,
          edtMobile, headlayout, binding_layActionbar, linearLayout, scrollView2,
          spinnerMemberPosition, tvBeneficiarylist, tvRegister, txtLoginerror);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
