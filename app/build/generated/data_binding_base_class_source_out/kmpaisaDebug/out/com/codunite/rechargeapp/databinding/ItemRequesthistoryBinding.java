// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRequesthistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView amount;

  @NonNull
  public final CardView cardview;

  @NonNull
  public final TextView datetime;

  @NonNull
  public final ImageView imgRuppeSymbol;

  @NonNull
  public final LinearLayout layAmount;

  @NonNull
  public final RelativeLayout layTop;

  @NonNull
  public final LinearLayout lytParent;

  @NonNull
  public final TextView rechargedesc;

  private ItemRequesthistoryBinding(@NonNull LinearLayout rootView, @NonNull TextView amount,
      @NonNull CardView cardview, @NonNull TextView datetime, @NonNull ImageView imgRuppeSymbol,
      @NonNull LinearLayout layAmount, @NonNull RelativeLayout layTop,
      @NonNull LinearLayout lytParent, @NonNull TextView rechargedesc) {
    this.rootView = rootView;
    this.amount = amount;
    this.cardview = cardview;
    this.datetime = datetime;
    this.imgRuppeSymbol = imgRuppeSymbol;
    this.layAmount = layAmount;
    this.layTop = layTop;
    this.lytParent = lytParent;
    this.rechargedesc = rechargedesc;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRequesthistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRequesthistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_requesthistory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRequesthistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount;
      TextView amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.cardview;
      CardView cardview = ViewBindings.findChildViewById(rootView, id);
      if (cardview == null) {
        break missingId;
      }

      id = R.id.datetime;
      TextView datetime = ViewBindings.findChildViewById(rootView, id);
      if (datetime == null) {
        break missingId;
      }

      id = R.id.img_ruppe_symbol;
      ImageView imgRuppeSymbol = ViewBindings.findChildViewById(rootView, id);
      if (imgRuppeSymbol == null) {
        break missingId;
      }

      id = R.id.lay_amount;
      LinearLayout layAmount = ViewBindings.findChildViewById(rootView, id);
      if (layAmount == null) {
        break missingId;
      }

      id = R.id.lay_top;
      RelativeLayout layTop = ViewBindings.findChildViewById(rootView, id);
      if (layTop == null) {
        break missingId;
      }

      LinearLayout lytParent = (LinearLayout) rootView;

      id = R.id.rechargedesc;
      TextView rechargedesc = ViewBindings.findChildViewById(rootView, id);
      if (rechargedesc == null) {
        break missingId;
      }

      return new ItemRequesthistoryBinding((LinearLayout) rootView, amount, cardview, datetime,
          imgRuppeSymbol, layAmount, layTop, lytParent, rechargedesc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
