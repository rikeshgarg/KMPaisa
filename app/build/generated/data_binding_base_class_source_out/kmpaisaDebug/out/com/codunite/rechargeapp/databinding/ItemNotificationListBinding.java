// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNotificationListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardview;

  @NonNull
  public final ImageView imgNotification;

  @NonNull
  public final RelativeLayout layHeadChange;

  @NonNull
  public final LinearLayout layNotification;

  @NonNull
  public final LinearLayout lytParent;

  @NonNull
  public final TextView tvDesc;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView txtLetter;

  private ItemNotificationListBinding(@NonNull LinearLayout rootView, @NonNull CardView cardview,
      @NonNull ImageView imgNotification, @NonNull RelativeLayout layHeadChange,
      @NonNull LinearLayout layNotification, @NonNull LinearLayout lytParent,
      @NonNull TextView tvDesc, @NonNull TextView tvTitle, @NonNull TextView txtLetter) {
    this.rootView = rootView;
    this.cardview = cardview;
    this.imgNotification = imgNotification;
    this.layHeadChange = layHeadChange;
    this.layNotification = layNotification;
    this.lytParent = lytParent;
    this.tvDesc = tvDesc;
    this.tvTitle = tvTitle;
    this.txtLetter = txtLetter;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNotificationListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNotificationListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_notification_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNotificationListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardview;
      CardView cardview = ViewBindings.findChildViewById(rootView, id);
      if (cardview == null) {
        break missingId;
      }

      id = R.id.img_notification;
      ImageView imgNotification = ViewBindings.findChildViewById(rootView, id);
      if (imgNotification == null) {
        break missingId;
      }

      id = R.id.lay_head_change;
      RelativeLayout layHeadChange = ViewBindings.findChildViewById(rootView, id);
      if (layHeadChange == null) {
        break missingId;
      }

      id = R.id.lay_notification;
      LinearLayout layNotification = ViewBindings.findChildViewById(rootView, id);
      if (layNotification == null) {
        break missingId;
      }

      LinearLayout lytParent = (LinearLayout) rootView;

      id = R.id.tv_desc;
      TextView tvDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvDesc == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.txt_letter;
      TextView txtLetter = ViewBindings.findChildViewById(rootView, id);
      if (txtLetter == null) {
        break missingId;
      }

      return new ItemNotificationListBinding((LinearLayout) rootView, cardview, imgNotification,
          layHeadChange, layNotification, lytParent, tvDesc, tvTitle, txtLetter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
