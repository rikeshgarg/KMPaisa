// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NavHeaderMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout llClose;

  @NonNull
  public final LinearLayout llProfileImage;

  @NonNull
  public final ImageView menuheaderDp;

  @NonNull
  public final TextView menuheaderMemberid;

  @NonNull
  public final TextView menuheaderName;

  @NonNull
  public final TextView userType;

  private NavHeaderMainBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout llClose,
      @NonNull LinearLayout llProfileImage, @NonNull ImageView menuheaderDp,
      @NonNull TextView menuheaderMemberid, @NonNull TextView menuheaderName,
      @NonNull TextView userType) {
    this.rootView = rootView;
    this.llClose = llClose;
    this.llProfileImage = llProfileImage;
    this.menuheaderDp = menuheaderDp;
    this.menuheaderMemberid = menuheaderMemberid;
    this.menuheaderName = menuheaderName;
    this.userType = userType;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NavHeaderMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NavHeaderMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nav_header_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NavHeaderMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_close;
      LinearLayout llClose = ViewBindings.findChildViewById(rootView, id);
      if (llClose == null) {
        break missingId;
      }

      id = R.id.ll_profile_image;
      LinearLayout llProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (llProfileImage == null) {
        break missingId;
      }

      id = R.id.menuheader_dp;
      ImageView menuheaderDp = ViewBindings.findChildViewById(rootView, id);
      if (menuheaderDp == null) {
        break missingId;
      }

      id = R.id.menuheader_memberid;
      TextView menuheaderMemberid = ViewBindings.findChildViewById(rootView, id);
      if (menuheaderMemberid == null) {
        break missingId;
      }

      id = R.id.menuheader_name;
      TextView menuheaderName = ViewBindings.findChildViewById(rootView, id);
      if (menuheaderName == null) {
        break missingId;
      }

      id = R.id.user_type;
      TextView userType = ViewBindings.findChildViewById(rootView, id);
      if (userType == null) {
        break missingId;
      }

      return new NavHeaderMainBinding((RelativeLayout) rootView, llClose, llProfileImage,
          menuheaderDp, menuheaderMemberid, menuheaderName, userType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
