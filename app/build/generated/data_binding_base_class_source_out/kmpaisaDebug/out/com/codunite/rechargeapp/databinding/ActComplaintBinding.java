// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActComplaintBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText etDesc;

  @NonNull
  public final ConstraintLayout headlayout;

  @NonNull
  public final IncludeActionbarBinding layActionbar;

  @NonNull
  public final Button submitTicket;

  @NonNull
  public final TextView tvRechargeamount;

  @NonNull
  public final TextView tvRechargeid;

  private ActComplaintBinding(@NonNull ConstraintLayout rootView, @NonNull EditText etDesc,
      @NonNull ConstraintLayout headlayout, @NonNull IncludeActionbarBinding layActionbar,
      @NonNull Button submitTicket, @NonNull TextView tvRechargeamount,
      @NonNull TextView tvRechargeid) {
    this.rootView = rootView;
    this.etDesc = etDesc;
    this.headlayout = headlayout;
    this.layActionbar = layActionbar;
    this.submitTicket = submitTicket;
    this.tvRechargeamount = tvRechargeamount;
    this.tvRechargeid = tvRechargeid;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActComplaintBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActComplaintBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_complaint, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActComplaintBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_desc;
      EditText etDesc = ViewBindings.findChildViewById(rootView, id);
      if (etDesc == null) {
        break missingId;
      }

      ConstraintLayout headlayout = (ConstraintLayout) rootView;

      id = R.id.lay_actionbar;
      View layActionbar = ViewBindings.findChildViewById(rootView, id);
      if (layActionbar == null) {
        break missingId;
      }
      IncludeActionbarBinding binding_layActionbar = IncludeActionbarBinding.bind(layActionbar);

      id = R.id.submit_ticket;
      Button submitTicket = ViewBindings.findChildViewById(rootView, id);
      if (submitTicket == null) {
        break missingId;
      }

      id = R.id.tv_rechargeamount;
      TextView tvRechargeamount = ViewBindings.findChildViewById(rootView, id);
      if (tvRechargeamount == null) {
        break missingId;
      }

      id = R.id.tv_rechargeid;
      TextView tvRechargeid = ViewBindings.findChildViewById(rootView, id);
      if (tvRechargeid == null) {
        break missingId;
      }

      return new ActComplaintBinding((ConstraintLayout) rootView, etDesc, headlayout,
          binding_layActionbar, submitTicket, tvRechargeamount, tvRechargeid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
