// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import com.denzcoskun.imageslider.ImageSlider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout activityLanding;

  @NonNull
  public final RelativeLayout activityLanding1;

  @NonNull
  public final AppCompatButton btnFundrequest;

  @NonNull
  public final FrameLayout cardAffiliate;

  @NonNull
  public final CardView cardMarque;

  @NonNull
  public final CardView cvRecharge1;

  @NonNull
  public final CardView cvRecharge2;

  @NonNull
  public final CardView cvRecharge3;

  @NonNull
  public final ImageSlider imageSlider;

  @NonNull
  public final LinearLayout imgBackground;

  @NonNull
  public final LinearLayout imgBackground1;

  @NonNull
  public final ImageView imgdrawable1;

  @NonNull
  public final ImageView imgdrawable2;

  @NonNull
  public final ImageView imgdrawable3;

  @NonNull
  public final LinearLayout layActiveDownline;

  @NonNull
  public final LinearLayout layAepsWallet;

  @NonNull
  public final LinearLayout layDeactiveDownline;

  @NonNull
  public final LinearLayout layDirectActive;

  @NonNull
  public final LinearLayout layDirectDeactive;

  @NonNull
  public final LinearLayout layDirectDownline;

  @NonNull
  public final LinearLayout layDirectIncome;

  @NonNull
  public final LinearLayout layIsfundrequest;

  @NonNull
  public final LinearLayout layLevelIncome;

  @NonNull
  public final LinearLayout layMainWallet;

  @NonNull
  public final LinearLayout layTotalDownline;

  @NonNull
  public final SwipeRefreshLayout layrefrsh;

  @NonNull
  public final LinearLayout mylayout;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final RecyclerView rvAnimLay;

  @NonNull
  public final RecyclerView rvDashboard;

  @NonNull
  public final RecyclerView rvDashboardAeps;

  @NonNull
  public final RecyclerView rvDashboardAffiliate;

  @NonNull
  public final TextView textMarquee;

  @NonNull
  public final TextView txtActiveDownline;

  @NonNull
  public final TextView txtAeps;

  @NonNull
  public final TextView txtBbpsIncome;

  @NonNull
  public final TextView txtCashbackIncome;

  @NonNull
  public final TextView txtDeactiveDownline;

  @NonNull
  public final TextView txtDirectActive;

  @NonNull
  public final TextView txtDirectDeactive;

  @NonNull
  public final TextView txtDirectDownline;

  @NonNull
  public final TextView txtDirectIncome;

  @NonNull
  public final TextView txtLevelIncome;

  @NonNull
  public final TextView txtMainWallet;

  @NonNull
  public final TextView txtMembership;

  @NonNull
  public final TextView txtRank;

  @NonNull
  public final TextView txtRechargeIncome;

  @NonNull
  public final TextView txtTotalDownline;

  @NonNull
  public final TextView txtTotalIncome;

  private FragHomeBinding(@NonNull LinearLayout rootView, @NonNull RelativeLayout activityLanding,
      @NonNull RelativeLayout activityLanding1, @NonNull AppCompatButton btnFundrequest,
      @NonNull FrameLayout cardAffiliate, @NonNull CardView cardMarque,
      @NonNull CardView cvRecharge1, @NonNull CardView cvRecharge2, @NonNull CardView cvRecharge3,
      @NonNull ImageSlider imageSlider, @NonNull LinearLayout imgBackground,
      @NonNull LinearLayout imgBackground1, @NonNull ImageView imgdrawable1,
      @NonNull ImageView imgdrawable2, @NonNull ImageView imgdrawable3,
      @NonNull LinearLayout layActiveDownline, @NonNull LinearLayout layAepsWallet,
      @NonNull LinearLayout layDeactiveDownline, @NonNull LinearLayout layDirectActive,
      @NonNull LinearLayout layDirectDeactive, @NonNull LinearLayout layDirectDownline,
      @NonNull LinearLayout layDirectIncome, @NonNull LinearLayout layIsfundrequest,
      @NonNull LinearLayout layLevelIncome, @NonNull LinearLayout layMainWallet,
      @NonNull LinearLayout layTotalDownline, @NonNull SwipeRefreshLayout layrefrsh,
      @NonNull LinearLayout mylayout, @NonNull NestedScrollView nestedScrollView,
      @NonNull RecyclerView rvAnimLay, @NonNull RecyclerView rvDashboard,
      @NonNull RecyclerView rvDashboardAeps, @NonNull RecyclerView rvDashboardAffiliate,
      @NonNull TextView textMarquee, @NonNull TextView txtActiveDownline, @NonNull TextView txtAeps,
      @NonNull TextView txtBbpsIncome, @NonNull TextView txtCashbackIncome,
      @NonNull TextView txtDeactiveDownline, @NonNull TextView txtDirectActive,
      @NonNull TextView txtDirectDeactive, @NonNull TextView txtDirectDownline,
      @NonNull TextView txtDirectIncome, @NonNull TextView txtLevelIncome,
      @NonNull TextView txtMainWallet, @NonNull TextView txtMembership, @NonNull TextView txtRank,
      @NonNull TextView txtRechargeIncome, @NonNull TextView txtTotalDownline,
      @NonNull TextView txtTotalIncome) {
    this.rootView = rootView;
    this.activityLanding = activityLanding;
    this.activityLanding1 = activityLanding1;
    this.btnFundrequest = btnFundrequest;
    this.cardAffiliate = cardAffiliate;
    this.cardMarque = cardMarque;
    this.cvRecharge1 = cvRecharge1;
    this.cvRecharge2 = cvRecharge2;
    this.cvRecharge3 = cvRecharge3;
    this.imageSlider = imageSlider;
    this.imgBackground = imgBackground;
    this.imgBackground1 = imgBackground1;
    this.imgdrawable1 = imgdrawable1;
    this.imgdrawable2 = imgdrawable2;
    this.imgdrawable3 = imgdrawable3;
    this.layActiveDownline = layActiveDownline;
    this.layAepsWallet = layAepsWallet;
    this.layDeactiveDownline = layDeactiveDownline;
    this.layDirectActive = layDirectActive;
    this.layDirectDeactive = layDirectDeactive;
    this.layDirectDownline = layDirectDownline;
    this.layDirectIncome = layDirectIncome;
    this.layIsfundrequest = layIsfundrequest;
    this.layLevelIncome = layLevelIncome;
    this.layMainWallet = layMainWallet;
    this.layTotalDownline = layTotalDownline;
    this.layrefrsh = layrefrsh;
    this.mylayout = mylayout;
    this.nestedScrollView = nestedScrollView;
    this.rvAnimLay = rvAnimLay;
    this.rvDashboard = rvDashboard;
    this.rvDashboardAeps = rvDashboardAeps;
    this.rvDashboardAffiliate = rvDashboardAffiliate;
    this.textMarquee = textMarquee;
    this.txtActiveDownline = txtActiveDownline;
    this.txtAeps = txtAeps;
    this.txtBbpsIncome = txtBbpsIncome;
    this.txtCashbackIncome = txtCashbackIncome;
    this.txtDeactiveDownline = txtDeactiveDownline;
    this.txtDirectActive = txtDirectActive;
    this.txtDirectDeactive = txtDirectDeactive;
    this.txtDirectDownline = txtDirectDownline;
    this.txtDirectIncome = txtDirectIncome;
    this.txtLevelIncome = txtLevelIncome;
    this.txtMainWallet = txtMainWallet;
    this.txtMembership = txtMembership;
    this.txtRank = txtRank;
    this.txtRechargeIncome = txtRechargeIncome;
    this.txtTotalDownline = txtTotalDownline;
    this.txtTotalIncome = txtTotalIncome;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.frag_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_landing;
      RelativeLayout activityLanding = ViewBindings.findChildViewById(rootView, id);
      if (activityLanding == null) {
        break missingId;
      }

      id = R.id.activity_landing1;
      RelativeLayout activityLanding1 = ViewBindings.findChildViewById(rootView, id);
      if (activityLanding1 == null) {
        break missingId;
      }

      id = R.id.btn_fundrequest;
      AppCompatButton btnFundrequest = ViewBindings.findChildViewById(rootView, id);
      if (btnFundrequest == null) {
        break missingId;
      }

      id = R.id.card_affiliate;
      FrameLayout cardAffiliate = ViewBindings.findChildViewById(rootView, id);
      if (cardAffiliate == null) {
        break missingId;
      }

      id = R.id.card_marque;
      CardView cardMarque = ViewBindings.findChildViewById(rootView, id);
      if (cardMarque == null) {
        break missingId;
      }

      id = R.id.cv_recharge1;
      CardView cvRecharge1 = ViewBindings.findChildViewById(rootView, id);
      if (cvRecharge1 == null) {
        break missingId;
      }

      id = R.id.cv_recharge2;
      CardView cvRecharge2 = ViewBindings.findChildViewById(rootView, id);
      if (cvRecharge2 == null) {
        break missingId;
      }

      id = R.id.cv_recharge3;
      CardView cvRecharge3 = ViewBindings.findChildViewById(rootView, id);
      if (cvRecharge3 == null) {
        break missingId;
      }

      id = R.id.image_slider;
      ImageSlider imageSlider = ViewBindings.findChildViewById(rootView, id);
      if (imageSlider == null) {
        break missingId;
      }

      id = R.id.img_background;
      LinearLayout imgBackground = ViewBindings.findChildViewById(rootView, id);
      if (imgBackground == null) {
        break missingId;
      }

      id = R.id.img_background1;
      LinearLayout imgBackground1 = ViewBindings.findChildViewById(rootView, id);
      if (imgBackground1 == null) {
        break missingId;
      }

      id = R.id.imgdrawable1;
      ImageView imgdrawable1 = ViewBindings.findChildViewById(rootView, id);
      if (imgdrawable1 == null) {
        break missingId;
      }

      id = R.id.imgdrawable2;
      ImageView imgdrawable2 = ViewBindings.findChildViewById(rootView, id);
      if (imgdrawable2 == null) {
        break missingId;
      }

      id = R.id.imgdrawable3;
      ImageView imgdrawable3 = ViewBindings.findChildViewById(rootView, id);
      if (imgdrawable3 == null) {
        break missingId;
      }

      id = R.id.lay_active_downline;
      LinearLayout layActiveDownline = ViewBindings.findChildViewById(rootView, id);
      if (layActiveDownline == null) {
        break missingId;
      }

      id = R.id.lay_aeps_wallet;
      LinearLayout layAepsWallet = ViewBindings.findChildViewById(rootView, id);
      if (layAepsWallet == null) {
        break missingId;
      }

      id = R.id.lay_deactive_downline;
      LinearLayout layDeactiveDownline = ViewBindings.findChildViewById(rootView, id);
      if (layDeactiveDownline == null) {
        break missingId;
      }

      id = R.id.lay_direct_active;
      LinearLayout layDirectActive = ViewBindings.findChildViewById(rootView, id);
      if (layDirectActive == null) {
        break missingId;
      }

      id = R.id.lay_direct_deactive;
      LinearLayout layDirectDeactive = ViewBindings.findChildViewById(rootView, id);
      if (layDirectDeactive == null) {
        break missingId;
      }

      id = R.id.lay_direct_downline;
      LinearLayout layDirectDownline = ViewBindings.findChildViewById(rootView, id);
      if (layDirectDownline == null) {
        break missingId;
      }

      id = R.id.lay_direct_income;
      LinearLayout layDirectIncome = ViewBindings.findChildViewById(rootView, id);
      if (layDirectIncome == null) {
        break missingId;
      }

      id = R.id.lay_isfundrequest;
      LinearLayout layIsfundrequest = ViewBindings.findChildViewById(rootView, id);
      if (layIsfundrequest == null) {
        break missingId;
      }

      id = R.id.lay_level_income;
      LinearLayout layLevelIncome = ViewBindings.findChildViewById(rootView, id);
      if (layLevelIncome == null) {
        break missingId;
      }

      id = R.id.lay_main_wallet;
      LinearLayout layMainWallet = ViewBindings.findChildViewById(rootView, id);
      if (layMainWallet == null) {
        break missingId;
      }

      id = R.id.lay_total_downline;
      LinearLayout layTotalDownline = ViewBindings.findChildViewById(rootView, id);
      if (layTotalDownline == null) {
        break missingId;
      }

      id = R.id.layrefrsh;
      SwipeRefreshLayout layrefrsh = ViewBindings.findChildViewById(rootView, id);
      if (layrefrsh == null) {
        break missingId;
      }

      LinearLayout mylayout = (LinearLayout) rootView;

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.rv_anim_lay;
      RecyclerView rvAnimLay = ViewBindings.findChildViewById(rootView, id);
      if (rvAnimLay == null) {
        break missingId;
      }

      id = R.id.rv_dashboard;
      RecyclerView rvDashboard = ViewBindings.findChildViewById(rootView, id);
      if (rvDashboard == null) {
        break missingId;
      }

      id = R.id.rv_dashboard_aeps;
      RecyclerView rvDashboardAeps = ViewBindings.findChildViewById(rootView, id);
      if (rvDashboardAeps == null) {
        break missingId;
      }

      id = R.id.rv_dashboard_affiliate;
      RecyclerView rvDashboardAffiliate = ViewBindings.findChildViewById(rootView, id);
      if (rvDashboardAffiliate == null) {
        break missingId;
      }

      id = R.id.text_marquee;
      TextView textMarquee = ViewBindings.findChildViewById(rootView, id);
      if (textMarquee == null) {
        break missingId;
      }

      id = R.id.txt_active_downline;
      TextView txtActiveDownline = ViewBindings.findChildViewById(rootView, id);
      if (txtActiveDownline == null) {
        break missingId;
      }

      id = R.id.txt_aeps;
      TextView txtAeps = ViewBindings.findChildViewById(rootView, id);
      if (txtAeps == null) {
        break missingId;
      }

      id = R.id.txt_bbps_income;
      TextView txtBbpsIncome = ViewBindings.findChildViewById(rootView, id);
      if (txtBbpsIncome == null) {
        break missingId;
      }

      id = R.id.txt_cashback_income;
      TextView txtCashbackIncome = ViewBindings.findChildViewById(rootView, id);
      if (txtCashbackIncome == null) {
        break missingId;
      }

      id = R.id.txt_deactive_downline;
      TextView txtDeactiveDownline = ViewBindings.findChildViewById(rootView, id);
      if (txtDeactiveDownline == null) {
        break missingId;
      }

      id = R.id.txt_direct_active;
      TextView txtDirectActive = ViewBindings.findChildViewById(rootView, id);
      if (txtDirectActive == null) {
        break missingId;
      }

      id = R.id.txt_direct_deactive;
      TextView txtDirectDeactive = ViewBindings.findChildViewById(rootView, id);
      if (txtDirectDeactive == null) {
        break missingId;
      }

      id = R.id.txt_direct_downline;
      TextView txtDirectDownline = ViewBindings.findChildViewById(rootView, id);
      if (txtDirectDownline == null) {
        break missingId;
      }

      id = R.id.txt_direct_income;
      TextView txtDirectIncome = ViewBindings.findChildViewById(rootView, id);
      if (txtDirectIncome == null) {
        break missingId;
      }

      id = R.id.txt_level_income;
      TextView txtLevelIncome = ViewBindings.findChildViewById(rootView, id);
      if (txtLevelIncome == null) {
        break missingId;
      }

      id = R.id.txt_main_wallet;
      TextView txtMainWallet = ViewBindings.findChildViewById(rootView, id);
      if (txtMainWallet == null) {
        break missingId;
      }

      id = R.id.txt_membership;
      TextView txtMembership = ViewBindings.findChildViewById(rootView, id);
      if (txtMembership == null) {
        break missingId;
      }

      id = R.id.txt_rank;
      TextView txtRank = ViewBindings.findChildViewById(rootView, id);
      if (txtRank == null) {
        break missingId;
      }

      id = R.id.txt_recharge_income;
      TextView txtRechargeIncome = ViewBindings.findChildViewById(rootView, id);
      if (txtRechargeIncome == null) {
        break missingId;
      }

      id = R.id.txt_total_downline;
      TextView txtTotalDownline = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalDownline == null) {
        break missingId;
      }

      id = R.id.txt_total_income;
      TextView txtTotalIncome = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalIncome == null) {
        break missingId;
      }

      return new FragHomeBinding((LinearLayout) rootView, activityLanding, activityLanding1,
          btnFundrequest, cardAffiliate, cardMarque, cvRecharge1, cvRecharge2, cvRecharge3,
          imageSlider, imgBackground, imgBackground1, imgdrawable1, imgdrawable2, imgdrawable3,
          layActiveDownline, layAepsWallet, layDeactiveDownline, layDirectActive, layDirectDeactive,
          layDirectDownline, layDirectIncome, layIsfundrequest, layLevelIncome, layMainWallet,
          layTotalDownline, layrefrsh, mylayout, nestedScrollView, rvAnimLay, rvDashboard,
          rvDashboardAeps, rvDashboardAffiliate, textMarquee, txtActiveDownline, txtAeps,
          txtBbpsIncome, txtCashbackIncome, txtDeactiveDownline, txtDirectActive, txtDirectDeactive,
          txtDirectDownline, txtDirectIncome, txtLevelIncome, txtMainWallet, txtMembership, txtRank,
          txtRechargeIncome, txtTotalDownline, txtTotalIncome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
