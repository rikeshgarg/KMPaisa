// Generated by view binder compiler. Do not edit!
package com.codunite.rechargeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codunite.rechargeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActRegisterTransferBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLoginIn;

  @NonNull
  public final Button btnSignUp;

  @NonNull
  public final Button btnTransactionPassword;

  @NonNull
  public final EditText edtAddress;

  @NonNull
  public final EditText edtFname;

  @NonNull
  public final EditText edtLname;

  @NonNull
  public final EditText edtMobile;

  @NonNull
  public final EditText edtPincode;

  @NonNull
  public final EditText edtTransactionpassword;

  @NonNull
  public final TextView goback;

  @NonNull
  public final ConstraintLayout headlayout;

  @NonNull
  public final IncludeActionbarBinding layActionbar;

  @NonNull
  public final CardView layoutTransactionpassword;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayoutReg;

  @NonNull
  public final NestedScrollView scrollView2;

  @NonNull
  public final Spinner spinnerMemberPosition;

  @NonNull
  public final TextView tvLogin;

  @NonNull
  public final TextView txtDob;

  @NonNull
  public final TextView txtLoginerror;

  private ActRegisterTransferBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLoginIn,
      @NonNull Button btnSignUp, @NonNull Button btnTransactionPassword,
      @NonNull EditText edtAddress, @NonNull EditText edtFname, @NonNull EditText edtLname,
      @NonNull EditText edtMobile, @NonNull EditText edtPincode,
      @NonNull EditText edtTransactionpassword, @NonNull TextView goback,
      @NonNull ConstraintLayout headlayout, @NonNull IncludeActionbarBinding layActionbar,
      @NonNull CardView layoutTransactionpassword, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayoutReg, @NonNull NestedScrollView scrollView2,
      @NonNull Spinner spinnerMemberPosition, @NonNull TextView tvLogin, @NonNull TextView txtDob,
      @NonNull TextView txtLoginerror) {
    this.rootView = rootView;
    this.btnLoginIn = btnLoginIn;
    this.btnSignUp = btnSignUp;
    this.btnTransactionPassword = btnTransactionPassword;
    this.edtAddress = edtAddress;
    this.edtFname = edtFname;
    this.edtLname = edtLname;
    this.edtMobile = edtMobile;
    this.edtPincode = edtPincode;
    this.edtTransactionpassword = edtTransactionpassword;
    this.goback = goback;
    this.headlayout = headlayout;
    this.layActionbar = layActionbar;
    this.layoutTransactionpassword = layoutTransactionpassword;
    this.linearLayout = linearLayout;
    this.linearLayoutReg = linearLayoutReg;
    this.scrollView2 = scrollView2;
    this.spinnerMemberPosition = spinnerMemberPosition;
    this.tvLogin = tvLogin;
    this.txtDob = txtDob;
    this.txtLoginerror = txtLoginerror;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActRegisterTransferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActRegisterTransferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_register_transfer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActRegisterTransferBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_loginIn;
      Button btnLoginIn = ViewBindings.findChildViewById(rootView, id);
      if (btnLoginIn == null) {
        break missingId;
      }

      id = R.id.btnSignUp;
      Button btnSignUp = ViewBindings.findChildViewById(rootView, id);
      if (btnSignUp == null) {
        break missingId;
      }

      id = R.id.btn_transaction_password;
      Button btnTransactionPassword = ViewBindings.findChildViewById(rootView, id);
      if (btnTransactionPassword == null) {
        break missingId;
      }

      id = R.id.edt_address;
      EditText edtAddress = ViewBindings.findChildViewById(rootView, id);
      if (edtAddress == null) {
        break missingId;
      }

      id = R.id.edt_fname;
      EditText edtFname = ViewBindings.findChildViewById(rootView, id);
      if (edtFname == null) {
        break missingId;
      }

      id = R.id.edt_lname;
      EditText edtLname = ViewBindings.findChildViewById(rootView, id);
      if (edtLname == null) {
        break missingId;
      }

      id = R.id.edt_mobile;
      EditText edtMobile = ViewBindings.findChildViewById(rootView, id);
      if (edtMobile == null) {
        break missingId;
      }

      id = R.id.edt_pincode;
      EditText edtPincode = ViewBindings.findChildViewById(rootView, id);
      if (edtPincode == null) {
        break missingId;
      }

      id = R.id.edt_transactionpassword;
      EditText edtTransactionpassword = ViewBindings.findChildViewById(rootView, id);
      if (edtTransactionpassword == null) {
        break missingId;
      }

      id = R.id.goback;
      TextView goback = ViewBindings.findChildViewById(rootView, id);
      if (goback == null) {
        break missingId;
      }

      ConstraintLayout headlayout = (ConstraintLayout) rootView;

      id = R.id.lay_actionbar;
      View layActionbar = ViewBindings.findChildViewById(rootView, id);
      if (layActionbar == null) {
        break missingId;
      }
      IncludeActionbarBinding binding_layActionbar = IncludeActionbarBinding.bind(layActionbar);

      id = R.id.layout_transactionpassword;
      CardView layoutTransactionpassword = ViewBindings.findChildViewById(rootView, id);
      if (layoutTransactionpassword == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayoutReg;
      LinearLayout linearLayoutReg = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutReg == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      NestedScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.spinner_member_position;
      Spinner spinnerMemberPosition = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMemberPosition == null) {
        break missingId;
      }

      id = R.id.tv_login;
      TextView tvLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvLogin == null) {
        break missingId;
      }

      id = R.id.txtDob;
      TextView txtDob = ViewBindings.findChildViewById(rootView, id);
      if (txtDob == null) {
        break missingId;
      }

      id = R.id.txt_loginerror;
      TextView txtLoginerror = ViewBindings.findChildViewById(rootView, id);
      if (txtLoginerror == null) {
        break missingId;
      }

      return new ActRegisterTransferBinding((ConstraintLayout) rootView, btnLoginIn, btnSignUp,
          btnTransactionPassword, edtAddress, edtFname, edtLname, edtMobile, edtPincode,
          edtTransactionpassword, goback, headlayout, binding_layActionbar,
          layoutTransactionpassword, linearLayout, linearLayoutReg, scrollView2,
          spinnerMemberPosition, tvLogin, txtDob, txtLoginerror);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
