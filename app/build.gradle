plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
}
apply from: "../utils.gradle"

def configuration = rootProject.ext.configuration

android {
    compileSdkVersion configuration.compileSdkVersion
    buildToolsVersion configuration.buildToolsVersion

    signingConfigs {
        kmpaisa {
            storeFile file('../kmpaisa.jks')
            storePassword "123456"
            keyAlias "kmpaisa"
            keyPassword "123456"
        }
        coduniteb2b {
            storeFile file('../coduniteb2b.jks')
            storePassword "123456"
            keyAlias "coduniteb2b"
            keyPassword "123456"
        }
    }

    flavorDimensions "build"
    productFlavors {
        kmpaisa {
            dimension "build"
            applicationIdSuffix ".kmpaisa"
            manifestPlaceholders = [hostName: "www.kmpaisa.in"]
            copy {
                from 'src/kmpaisa/'
                include '*'
                into '.'
            }
            signingConfig signingConfigs.kmpaisa
        }
        coduniteb2b {
            dimension "build"
            applicationIdSuffix ".coduniteb2b"
            manifestPlaceholders = [hostName: "www.coduniteb2b.in"]
            copy {
                from 'src/coduniteb2b/'
                include '*'
                into '.'
            }
            signingConfig signingConfigs.coduniteb2b
        }
    }

    defaultConfig {
        applicationId configuration.package
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode configuration.versionCode
        versionName configuration.versionName
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        setProperty("archivesBaseName", "app")
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig true
    }
    dataBinding {
        enabled = true
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    def archiveBuildTypes = ["release", "debug"]
    def distFolder = "${System.properties['user.home']}\\Desktop\\AndroidApps\\"
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name in archiveBuildTypes) {
                // Update output filename here
                if (variant.versionName != null) {
                    String name = "${variant.getFlavorName()}_${variant.buildType.name}_v${variant.versionCode}.apk"
                    outputFileName = new File(name)
                }

                def taskSuffix = variant.name.capitalize()
                def assembleTaskName = "assemble${taskSuffix}"
                if (tasks.findByName(assembleTaskName)) {
                    def copyAPKFolderTask = tasks.create(name: "archive${taskSuffix}", type: Copy) {
                        description "Archive/copy APK folder to a shared folder."
                        def sourceFolder = "$buildDir/outputs/apk/${output.baseName.replace("-", "/")}"
                        def destinationFolder = "$distFolder${output.baseName.replace("-", "/")}"
                        print "Copying APK folder from: $sourceFolder into $destinationFolder\n"
                        from(sourceFolder)
                        into destinationFolder
                        eachFile { file ->
                            file.path = file.name
                        }
                        includeEmptyDirs = false
                    }
                    tasks[assembleTaskName].finalizedBy = [copyAPKFolderTask]
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/ksoap2-android-releases/'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    //Firebase
    implementation 'com.google.firebase:firebase-messaging:23.1.2'
    implementation 'com.google.firebase:firebase-dynamic-links:21.1.0'
    //Kotlin Purpose
    implementation 'androidx.core:core-ktx:1.10.0'
    // Default library
    implementation "androidx.tonyodev.fetch2:xfetch2:3.1.6"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // ImageLoading and Server
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    // ImagePicker, Ucrop, Permission
    implementation 'com.karumi:dexter:6.2.3'
    implementation 'com.github.krokyze:ucropnedit:2.2.6'
    implementation 'gun0912.ted:tedbottompicker:2.0.1'
    // Design, Animation and Improvement Code
    implementation "com.airbnb.android:lottie:5.2.0"
    implementation 'com.github.GrenderG:Toasty:1.4.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.asksira.android:webviewsuite:1.0.3'
    implementation 'com.github.denzcoskun:ImageSlideshow:0.1.0'
    // Check Use
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.chaos.view:pinview:1.4.4'
    implementation 'com.github.f0ris.sweetalert:library:1.6.2'
    implementation 'me.grantland:autofittextview:0.2.1'
    implementation 'com.android.volley:volley:1.2.1'
    // Pament Gateway
    implementation 'com.mikhaellopez:circularimageview:4.3.0'
    implementation 'com.budiyev.android:code-scanner:2.1.0'
    implementation 'com.google.android.play:core:1.10.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'cat.ereza:customactivityoncrash:2.4.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.22'
    implementation 'com.razorpay:checkout:1.5.16'
    implementation 'com.github.joaquimley:faboptions:1.2.0'
    implementation 'com.github.salehyarahmadi:AndExAlertDialog:v1.0.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.makeramen:roundedimageview:2.3.0'
}